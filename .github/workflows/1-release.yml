name: 01 - Release Action

on:
  workflow_dispatch:
  push:
    branches:
      - main

run-name: Release Action - ${{ github.actor }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write # Required for signing the tag

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to get previous tags

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '>=22.5.1'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Commit dist
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions[bot]"
          git config set advice.addIgnoredFile false
          git add dist/
          git commit -m "chore: update distributed files" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if version has changed
        id: check_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo CURRENT_VERSION=$CURRENT_VERSION >> "$GITHUB_OUTPUT"
          echo "Current version: $CURRENT_VERSION"
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags 2>/dev/null || echo '')
          echo "Previous tag: $PREVIOUS_TAG"
          if [[ "$PREVIOUS_TAG" == "v$CURRENT_VERSION" ]]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "Version has not changed, skipping tag creation"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "Version has changed, will create tag"
          fi
        env:
          GITHUB_OUTPUT: ${{ github.action_path }}/output.env

      - name: Create Git tag
        if: steps.check_version.outputs.changed == 'true'
        run: |
          TAG_NAME="v${{ steps.check_version.outputs.CURRENT_VERSION }}"
          git config --global user.email "renan-alm@github.com"
          git config --global user.name "Renan Alm"
          git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
          git push origin "$TAG_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
